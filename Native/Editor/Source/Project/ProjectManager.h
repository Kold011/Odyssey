#pragma once
#include "ProjectSettings.h"

namespace Odyssey
{
	class ProjectManager
	{
	public:
		static void CreateNewProject(ProjectSettings projectSettings);
		static void SetProject(ProjectSettings projectSettings);

	public:
		static const std::filesystem::path& GetProjectDirectory() { return m_ProjectDirectory; }
		static const std::filesystem::path& GetAssetsDirectory() { return m_AssetsDirectory; }
		static const std::filesystem::path& GetCacheDirectory() { return m_CacheDirectory; }
		static const std::filesystem::path& GetLogsDirectory() { return m_LogsDirectory; }

	private:
		static void GeneratePaths();

	private:
		inline static ProjectSettings m_Settings;
		inline static std::filesystem::path m_ProjectDirectory;
		inline static std::filesystem::path m_AssetsDirectory;
		inline static std::filesystem::path m_CacheDirectory;
		inline static std::filesystem::path m_LogsDirectory;

	private:
		static constexpr std::string_view ASSETS_DIRECTORY = "Assets";
		static constexpr std::string_view CACHE_DIRECTORY = "Cache";
		static constexpr std::string_view LOGS_DIRECTORY = "Logs";

	};
}
// ProjectSettings file
	// Project name

// Assets - Root folder for all assets, scripts, etc.
// Cache - Root folder for all binary cache assets
	// Binary - Root folder for all binary cache assets
	// Scripts - Root folder for managed binaries
	// Temp - Root folder for temporary files generated by the engine
// Logs - Root folder for engine-generated log files
// .sln/.vsconfig/.csproj - Genereate vs solution for user code here
